services:
  prometheus:
    image: prom/prometheus:latest
    container_name: vectorize_prometheus
    environment:
      TZ: Europe/Berlin
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    networks: [vectorize-network]
    restart: unless-stopped
    cap_drop: [ALL]
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on: [vectorize]

  grafana:
    image: grafana/grafana:latest
    container_name: vectorize_grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/provisioning:/etc/grafana/provisioning
      - ./config/dashboard.json:/var/lib/grafana/dashboards/dashboard.json
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s/monitoring"
      GF_SERVER_SERVE_FROM_SUB_PATH: true
      TZ: Europe/Berlin
    networks: [vectorize-network]
    cap_drop: [ALL]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on: [loki, prometheus]

  alloy:
    image: grafana/alloy:latest
    container_name: vectorize_alloy
    environment:
      TZ: Europe/Berlin
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy
    command: ["run", "--stability.level=experimental", "/etc/alloy/config.alloy"]
    networks: [vectorize-network]
    cap_drop: [ALL]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9999/ready"]
      interval: 30s
      timeout: 5s
      retries: 3
    depends_on: [loki]

  loki:
    image: grafana/loki:latest
    container_name: vectorize_loki
    environment:
      TZ: Europe/Berlin
    volumes:
      - ./config/loki-config.yaml:/etc/loki/loki-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yaml
    networks: [vectorize-network]
    cap_drop: [ALL]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  grafana_data:
  loki_data:
