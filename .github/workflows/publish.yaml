name: Publish Image
on:
  push:
    branches: [main]
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: vectorize

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          sudo docker builder prune
          df -h

      - name: Derive lowercase owner
        id: owner
        shell: bash
        run: |
          owner_lc="${GITHUB_REPOSITORY_OWNER,,}"
          echo "owner_lc=$owner_lc" >> "$GITHUB_OUTPUT"

      - name: Compose tags
        id: tags
        shell: bash
        run: |
          short_sha="${GITHUB_SHA::7}"
          arch="${{ matrix.platform }}"
          arch="${arch##*/}" # -> amd64 or arm64
          echo "short_sha=$short_sha" >> "$GITHUB_OUTPUT"
          echo "arch=$arch" >> "$GITHUB_OUTPUT"
          echo "arch_tag=${short_sha}-${arch}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ matrix.platform }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ matrix.platform }}
          tags: ghcr.io/${{ steps.owner.outputs.owner_lc }}/${{ env.IMAGE_NAME }}:${{ steps.tags.outputs.arch_tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          outputs: type=image,push=true,compression=gzip,compression-level=9

      - name: Clean up
        if: always()
        run: |
          docker system prune -af --volumes
          sudo rm -rf /tmp/*

  manifest:
    if: ${{ github.event_name != 'pull_request' }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Derive lowercase owner
        id: owner
        shell: bash
        run: |
          echo "owner_lc=${GITHUB_REPOSITORY_OWNER,,}" >> "$GITHUB_OUTPUT"

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create & push multi arch manifest
        env:
          REPO: ghcr.io/${{ steps.owner.outputs.owner_lc }}/${{ env.IMAGE_NAME }}
          SHA: ${{ github.sha }}
        run: |
          short_sha="${SHA::7}"
          docker buildx imagetools create \
            --tag $REPO:$short_sha \
            --tag $REPO:latest \
            $REPO:${short_sha}-amd64 \
            $REPO:${short_sha}-arm64
